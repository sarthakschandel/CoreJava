1. Task Description
The objective of the assignment is to print following numbers in parallel,
even numbers from 0 to 10
odd numbers  from 0 to 10
all numbers  from 0 and 10

2. Steps
Two thread classes need to be created - `EvenNumbersThread` and `OddNumbersThread`. Use main test thread to print number from 0 to 10.

- `EvenNumbersThread`: A class that extends the `Thread` class, responsible for printing even numbers from 0 to 10.
     - It overrides the `run()` method to specify the behavior of the thread.
     - It prints even numbers from 0 to 10, incrementing by 2, i.e., 0, 2, 4, 6, 8, 10.
- `OddNumbersThread`: A class that extends the `Thread` class, responsible for printing odd numbers from 0 to 10.
     - It overrides the `run()` method to specify the behavior of the thread.
     - It prints odd numbers from 0 to 10, incrementing by 2, i.e., 1, 3, 5, 7, 9.
- `Test`:  This is the main class containing `main()` method, which is the entry point of the program.
     - Inside the `main()` method, instances of `EvenNumbersThread`, `OddNumbersThread` are created.
     - The `start()` method is called on each thread to start their execution concurrently.
     - Print numbers from 0 to 10 after same in this main thread.

-Execution:
 When the program is executed, three threads run simultaneously:
   - `EvenNumbersThread` prints even numbers from 0 to 10.
   - `OddNumbersThread` prints odd numbers from 0 to 10.
   - The main thread (`Test`) prints all numbers from 0 to 10.

6. Expected Output
The output of the program will consist of the numbers printed by each thread independently. Since threads run concurrently, the order of the numbers' output may vary each time the program is executed.
